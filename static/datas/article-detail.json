{
    "code": "200",
    "content": {
        "articleDeatil": {
            "name": "Echo",
            "icon": "static/image/3.jpg",
            "time": "2018/3/28",
            "tag": "前端",
            "title": "从ES6重新认识JavaScript设计模式(一): 单例模式",
            "content": "单例模式是一种十分常用但却相对而言比较简单的单例模式。它是指在一个类只能有一个实例，即使多次实例化该类，也只返回第一次实例化后的实例对象。单例模式不仅能减少不必要的内存开销, 并且在减少全局的函数和变量冲突也具有重要的意义。<br/>以对象字面量创建对象的方式在JS开发中很常见。上面的对象是一个处理时间的工具库, 以对象字面量的方式来封装了一些方法处理时间格式。全局只暴露了一个timeTool对象, 在需要使用时, 只需要采用timeTool.getISODate()调用即可。timeTool对象就是单例模式的体现。在JavaScript创建对象的方式十分灵活, 可以直接通过对象字面量的方式实例化一个对象, 而其他面向对象的语言必须使用类进行实例化。所以，这里的timeTool就已经是一个实例， 且ES6中let和const不允许重复声明的特性，确保了timeTool不能被重新覆盖。"
        }
    }
}
